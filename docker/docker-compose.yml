version: "3.9"

services:
  cert-generator:
    image: alpine
    volumes:
      - ./certs:/certs
      - ./generate-certs.sh:/generate-certs.sh
    command: sh -c "apk add --no-cache openssl && chmod +x /generate-certs.sh && /generate-certs.sh"
    # To ensure the container doesn't exit immediately
    restart: "no"

  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ldap_server
    ports:
      - "1390:1390"
    depends_on:
      - mysql
      - cert-generator
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
      MYSQL_DATABASE: ldap_user_db
      LDAP_PORT: 1390
      LDAP_BASE_DN: dc=mieweb,dc=com
      LDAP_ADMIN_DN: cn=admin,dc=mieweb,dc=com
      LDAP_ADMIN_PASSWORD: secret
      LDAP_CERT_PATH: ../certs/server-cert.pem
      LDAP_KEY_PATH: ../certs/server-key.pem
      LDAP_CA_CERT_PATH: ../certs/ca-cert.pem
    volumes:
      - ./server:/usr/src/app
      - certs:/certs
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ldap_user_db
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ldap_client
    depends_on:
      - app
    ports:
      - "2222:2222"
    environment:
      LDAP_BASE: dc=mieweb,dc=com
      LDAP_URI: ldaps://app:1390
      LDAP_ADMIN_DN: cn=admin,dc=mieweb,dc=com
      LDAP_ADMIN_PW: secret
      LDAP_DOMAIN: mieweb.com
      LDAP_ORG: "MIE Organization"
      LDAP_CERT_SUBJ: "/C=US/ST=IN/L=FW/O=MIE/OU=OrgUnit/CN=mieweb.com"
      SSH_PORT: 2222
      LDAP_CERT_PATH: /certificates/ca-cert.pem
    volumes:
      - certs:/certs
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  certs:
  mysql_data:
